services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: web-scraper
        ports:
            - '${PORT}:8080'
        environment:
            NODE_ENV: dev
            PORT: ${PORT}
            DB_PORT: ${DB_PORT}
            ENCRYPTION_KEY: ${ENCRYPTION_KEY}
            API_KEY: ${API_KEY}
            DB_HOST: db
            DB_NAME: ${DB_NAME}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        user: '${UID}:${GID}'
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        depends_on:
            - db
        deploy:
            restart_policy:
                condition: on-failure
                delay: 2s
        networks:
            - scraper-network

    db:
        image: mysql:8.0
        container_name: web-scraper-db
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        ports:
            - '${DB_PORT}:3306'
        volumes:
            - mysql-data-dev:/var/lib/mysql
        networks:
            - scraper-network

    migration:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: web-scraper-migration-dev
        command: npm run migration:run
        environment:
            NODE_ENV: dev
            PORT: ${PORT}
            DB_PORT: ${DB_PORT}
            DB_HOST: db
            DB_NAME: ${DB_NAME}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        volumes:
            - .:/usr/src/app
        depends_on:
            - db
        networks:
            - scraper-network

volumes:
    mysql-data-dev:

networks:
    scraper-network:
        driver: bridge
